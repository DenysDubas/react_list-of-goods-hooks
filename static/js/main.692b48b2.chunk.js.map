{"version":3,"sources":["App.tsx","ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isResetAvailable","visibleGoods","sort","prev","next","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1C,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAmCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAAmBL,GAAcG,IAAaX,EAASU,KACvDI,EA9CD,SACLZ,EADK,GAGM,IADTS,EACQ,EADRA,SAAUH,EACF,EADEA,WAENM,EAAY,YAAOZ,GAiBzB,OAfAY,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQN,GACN,KAAKX,EAASkB,SACZ,OAAOF,EAAKG,cAAcF,GAC5B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAKK,OAASJ,EAAKI,OAC5B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAyBcS,CAAkBlB,EACrC,CAAEM,WAAUH,eAEd,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYf,IAAaX,EAASkB,WAGtCS,QAhCe,WACrBf,EAAYZ,EAASkB,WAuBjB,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYf,IAAaX,EAASoB,SAGtCO,QAzCa,WACnBf,EAAYZ,EAASoB,SAgCjB,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAalB,IAGjBmB,QAlDY,WAClBlB,GAAeD,IAyCX,qBAaCK,GACC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAvDI,WACZlB,GAAc,GACdG,EAAYZ,EAASU,OAkDf,sBAUJ,cAAC,EAAD,CAAaR,MAAOY,QEjI1Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.692b48b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { ListOfGoods } from './ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prev: string, next:string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prev.localeCompare(next);\n      case SortType.LENGTH:\n        return prev.length - next.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseList = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const isResetAvailable = isReversed || sortType !== SortType.NONE;\n  const visibleGoods = getReorderedGoods(goodsFromServer,\n    { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n\n        {isResetAvailable && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ListOfGoods goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}